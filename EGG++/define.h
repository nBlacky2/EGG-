#pragma once
#include <iostream>
#include <stdio.h>
#include <Windows.h>
#include <TlHelp32.h>
#include <string>

#define EGGLANG main
#define EGGMEM "memory.h"
#define EGGTHREAD "Thread"
#define EGGDITION +

#define EGGGG DWORD
#define EGGGGG procID
#define EGGGGGG procName
#define EGGGGGGG procId
#define EGGGGGGGG HANDLE
#define EGGGGGGGGG hSnap
#define EGGGGGGGGGG CreateToolhelp32Snapshot
#define EGGGGGGGGGGG TH32CS_SNAPPROCESS
#define EGGGGGGGGGGGG INVALID_HANDLE_VALUE
#define EGGGGGGGGGGGGG std
#define EGGGGGGGGGGGGGG ::
#define EGGGGGGGGGGGGGGG cout
#define EGGGGGGGGGGGGGGGG <<
#define EGGGGGGGGGGGGGGGGG return
#define EGGGGGGGGGGGGGGGGGG EXIT_FAILURE
#define EGGGGGGGGGGGGGGGGGGG if
#define EGGGGGGGGGGGGGGGGGGGG PROCESSENTRY32
#define EGGGGGGGGGGGGGGGGGGGGG Process32First
#define EGGGGGGGGGGGGGGGGGGGGGG do
#define EGGGGGGGGGGGGGGGGGGGGGGG th32ProcessID
#define EGGGGGGGGGGGGGGGGGGGGGGGG break
#define EGGGGGGGGGGGGGGGGGGGGGGGGG while
#define EGGGGGGGGGGGGGGGGGGGGGGGGGG !_stricmp
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGG szExeFile
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGG Process32Next
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGG CloseHandle
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG std::hex
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG uintptr_t
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG TH32CS_SNAPMODULE
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG TH32CS_SNAPMODULE32
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG MODULEENTRY32
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG Module32First
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG Module32Next
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG template
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG typename
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG constexpr
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG ReadProcessMemory
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG reinterpret_cast
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG void*
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG NULL
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG WriteProcessMemory
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG class
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG private
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG :
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG processId
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG nullptr
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG public
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG string_view
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG processName
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG entry
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG snapShot
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG OpenProcess
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG FALSE
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG CloseHandle
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG void
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG !moduleName.compare
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG localPlayer
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG onGround
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG GetAsyncKeyState
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG VK_SPACE
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG &&
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG std::endl
#define EGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG namespace



#define EGG int
#define EEG const
#define EEEG char*
#define EEEEG =
#define EEEEEG 0
#define EEEEEEG "Invalid handle value!"
#define EEEEEEEG .
#define EEEEEEEEG procEntry
#define EEEEEEEEEG dwSize
#define EEEEEEEEEEG sizeof
#define EEEEEEEEEEEG (
#define EEEEEEEEEEEEG )
#define EEEEEEEEEEEEEG ;
#define EEEEEEEEEEEEEEG &
#define EEEEEEEEEEEEEEEG {
#define EEEEEEEEEEEEEEEEG }
#define EEEEEEEEEEEEEEEEEG ==
#define EEEEEEEEEEEEEEEEEEEG ,
#define EEEEEEEEEEEEEEEEEEEEG auto
#define EEEEEEEEEEEEEEEEEEEEEG PID
#define EEEEEEEEEEEEEEEEEEEEEEG "csgo.exe"
#define EEEEEEEEEEEEEEEEEEEEEEEG "PID: "
#define EEEEEEEEEEEEEEEEEEEEEEEEG true
#define EEEEEEEEEEEEEEEEEEEEEEEEEG client
#define EEEEEEEEEEEEEEEEEEEEEEEEEEG GetModuleAddress
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEG "client.dll"
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEG "client -> "
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEG "0x"
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG modName
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG modBaseAddr
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG |
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG !
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG !=
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG modEntry
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG szModule
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG struct
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG offsets
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG lPlyOFF
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG fJumpOFF
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG fflagsOFF
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG 0xDEA98C
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG 0x52BBCD8
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG 0x104
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG <
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG >
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG T
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG Read
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG address
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG noexcept
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG value
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG processHandle
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG Write
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG this_thread
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG sleep_for
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG chrono
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG milliseconds
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG 6
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG ()
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG Memory
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG !processName.compare
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG PROCESS_ALL_ACCESS
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG ~Memory
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG moduleName
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG { }
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG result
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG compare
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG mem
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG GetProcessId
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG bool
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG 1
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG BYTE
#define EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEG 6






